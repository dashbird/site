install_deps: &install_deps
  name: "Installing dependencies"
  command: |
    wget https://github.com/gohugoio/hugo/releases/download/v0.67.1/hugo_extended_0.67.1_Linux-64bit.deb
    sudo dpkg -i hugo*.deb
    sudo apt-get update
    sudo apt-get install -y jpegoptim optipng
    sudo apt install python-pip python-dev
    # sudo apt install imagemagick
    sudo pip install awscli
    aws --version
    npm install

post_build: &post_build
  name: "Post build step"
  command: | 
    find public -type f -name '*.jpg' -exec jpegoptim {} \;
    find public -type f -name '*.png' -exec optipng {} \;
    ./compile.sh
    ./create_checksum.sh
  no_output_timeout: 30m

workflows:
  version: 2
  main:
    jobs:
      - deploy-prod:
          filters:
            branches:
              only: master
      - deploy-staging:
          filters:
            branches:
              only: staging 

version: 2
jobs:
  deploy-prod:
    docker:
      - image: circleci/node:carbon
    steps:
      - checkout
      - run:
          <<: *install_deps
      - run:
          name: "Build Website"
          command: hugo
      - run:
          <<: *post_build
      - run:
          name: "Deploy Production"
          command: |
            aws s3 sync --acl public-read --sse --delete public/  s3://aws-website-httpsdashbirdio-nvzul
            aws cloudfront create-invalidation --distribution-id E19T4M9Y3XAQXS --paths '/*'

  deploy-staging:
    docker:
      - image: circleci/node:carbon
    steps:
      - checkout
      - run:
          <<: *install_deps
      - run:
          name: "Build Website"
          command: hugo -b https://staging.dashbird.io
      # - run:
      #     <<: *post_build
      - run:
          name: "Disallow robots"
          command: |
            echo "User-agent: *" >> public/robots.txt
            echo "Disallow: /" >> public/robots.txt
      - run:
          name: "Deploy Staging"
          command: |
            aws s3 sync --acl public-read --sse --delete public/  s3://staging.dashbird.io
            aws cloudfront create-invalidation --distribution-id E2B9Q1NEUTU80 --paths '/*'
