[
    {
        "uri": "/content/docs/_index",
        "content": "---\ntitle: Dashbird - Monitoring And Error Tracking For AWS Lambda\ndescription: Function as a service performance analytics tool with real-time error alerting via Slack integration. Actionable graphs based on AWS CloudWatch logs.  \ndated: 2017-10-29T17:50:03+02:00\nsection: usage\naliases:\n /help/\n---\nsection class=\"container slogan\"\n  div class=\"row justify-content-md-end\"\n    div class=\"col-lg-6\"\n      h1 class=\"text-center text-md-left\"AWS Lambda error and performance tracking/h1\n      h2 class=\"mt-4 text-center text-md-left lato\"Alerts, error-tracking and analytics for Serverless./h2\n      h2 class=\"lato text-center text-md-left\"Take your FaaS system to another level./h2\n      div class=\"pt-5 pr-5\"\n        form method=\"get\" action=\"register\"\n          label class=\"input-group\"\n              input type=\"text\" class=\"form-control\" placeholder='Email' name=\"email\" required\n              button class=\"input-group-addon\"Get Started For Free/button\n          /label\n        /form\n        p class=\"text-center gray small\"No credit card required/p\n      /div\n    /div\n    div class=\"col-md-4 d-none d-md-block mr-4\"\n      img src=\"/images/dashbird-illustration.svg\"\n    /div\n  /div\n/section\n\nsection class=\"container social\" style=\"margin-top: 110px;\"\n  div class=\"row justify-content-center\"\n    div class=\"col-auto mr-md-3\" style=\"margin-top: 19px;\"img class=\"w-150 mx-auto\" src=\"/images/socialproof/nuviad.png\"/div\n    div class=\"col-auto mr-md-2 mt-4 d-flex align-items-center\"img class=\"w-150 mx-auto\" src=\"/images/socialproof/volta.png\"/div\n    div class=\"col-auto mt-4 d-flex align-items-center\"img class=\"w-150 mx-auto\" src=\"/images/socialproof/teamweek.png\"/div\n  /div\n  div class=\"row justify-content-md-center mt-5 subtle\"\n    div class=\"col-md-6 gray\"\n      p class=\"text-center slab\"“Dashbird is great for detecting issues in large scale Serverless systems. We use it for troubleshooting and optimising our applications daily. ”/p\n      p class=\"quote text-center\"- Mario Tosso, Software Developer/p\n    /div\n  /div\n/section\n\nsection class=\"container-fluid dark-bg mt-5\"\n  div class=\"row\"\n    div class=\"col text-center mt-5\"\n      span class=\"h2 underlined\"Why use it?/span\n    /div\n  /div\n\n  div class=\"row justify-content-md-center align-items-center\"\n    div class=\"col bg-white p-3 mt-5 mb-4 mx-auto\" style=\"max-width: 800px;\"\n      div class=\"row align-items-center\"\n        div class=\"col-md-2 text-center\"\n          img src=\"/images/magnifier.svg\"\n        /div\n        div class=\"col-md-10 text-center text-md-left\"\n          h3Quickly find and fix production errors/h3\n          p class=\"lato\"Tracking and alerting errors from all your Lambda functions.br Stacktraces and context helps you troubleshoot errors quickly and easily./p\n        /div\n      /div\n    /div\n  /div\n\n  div class=\"row justify-content-md-center align-items-center\"\n    div class=\"col bg-white p-3 mb-4 mx-auto\" style=\"max-width: 800px;\"\n      div class=\"row align-items-center\"\n        div class=\"col-md-2 text-center\"\n          img src=\"/images/tag.svg\"\n        /div\n        div class=\"col-md-10 text-center text-md-left\"\n          h3Get closer to your code while developing it/h3\n          p class=\"lato\"Real time insights after each deploy.br Execution data and logs let you iterate quicky after deploys./p\n        /div\n      /div\n    /div\n  /div\n\n  div class=\"row justify-content-md-center align-items-center\"\n    div class=\"col bg-white p-3 mb-5 mx-auto\" style=\"max-width: 800px;\"\n      div class=\"row align-items-center\"\n        div class=\"col-md-2 text-center\"\n          img src=\"/images/graph.svg\"\n        /div\n        div class=\"col-md-10 text-center text-md-left\"\n          h3Understand the bigger picture/h3\n          p class=\"lato\"Dashbird keeps an eye on account and function levelbr metrics as well as durations and memory usage. See exactly what's working and what's not./p\n        /div\n      /div\n    /div\n  /div\n\n/section\n\nsection class=\"container-fluid\"\n  div class=\"row justify-content-md-center\"\n    div class=\"col justify-content-md-center text-center bg-cta br-7 mb-8 mt-8 pt-5 pb-5 mx-auto\" style=\"max-width: 832px;\" \n      span class=\"h1 pt-5\"Start your free 14-day trial/span\n      h3 class=\"mt-3\"Make your serverless apps provide the best user-experience./h3\n      div class=\"row justify-content-md-center\"\n        div class=\"pt-5 pr-5 col-lg-7 mx-auto\"\n          form method=\"get\" action=\"register\"\n          label class=\"input-group\"\n            input type=\"text\" class=\"form-control\" placeholder='Email' name=\"email\" required\n            button class=\"input-group-addon\"Get Started For Free/button\n          /label\n          /form\n          p class=\"text-center small\"No credit card required/p\n        /div\n      /div\n    /div\n  /div\n/section\n",
        "tags": []
    },
    {
        "uri": "/content/docs/account-settings/billing",
        "content": "---\ndate: 2017-06-05\ntitle: Dashbird Billing Is Based On Invocations And Functions Count\nlinktitle: Billing\ndescription: Dashbird is a subscription based service that is billed monthly or yearly. The fee depends on the subscription type.\nkbSeries: [\"EAccount Settings\"]\nkbSeries_weight: 200\n---\nDashbird is subscription based service that is billed monthly or yearly. All the prices are in USD. You can edit your billing information on the Subscription page.\n\nAnnual vs monthly billing \n\nYou get 10% discount on all plans when you choose annual billing cycle on your subscription. The amount will be charged in advance and there will be no refunds based on your account activity. a href='/pricing' target='_blank'Get detailed quotes on the plans here./a\n\nProrating \nDashbird billing is transparent and fair. If you upgrade your plan in the middle of the billing cycle, you will charged the new plans price at that time for the rest of the month.\n\nInvoices \n\nYou will receive automatic invoices to the email that is connected with your account.\n\n14-day trial \n\nYou will automatically start your 14-day trial once you sign up for a new Dashbird account. Each organization has a separate subscription and trial period.\n\nOnce your trial has expired, system will attempt to charge you. If no billing info has been entered, your organization account will be suspended.\n\nEnding subscription \n\nYou can end your subscription any time from your Subscription page and you will not be charged again by the next billing cycle.\n\nNB: there will be no refunds based on the unused time on your account. You will continue to have access to all the features until your last payment credit runs out (either it was monthly or annual payment).\n\n---\nCheck out what features Dashbird offers and how these can be valuable to you!\n",
        "tags": []
    },
    {
        "uri": "/content/docs/account-settings/overview",
        "content": "---\ndate: 2017-06-05\ntitle: Dashbird Central Account Overview\nlinktitle: Overview\ndescription: This is where you can configure your Dashbird account settings, add new organizations, configure importer settings, invite users, set up alerts and more.\nkbSeries: [\"EAccount Settings\"]\nkbSeries_weight: 100\n---\n\nThe Account Overview will is the central place for learning about all the various account settings you can configure in your Dashbird account.\n\nProfile Settings\nCheck the Profile Settings for a more detailed explanation.\nbrNavigate to the User Settings by pressing User Menu → Profile.\n\n User settings\nAfter reaching the User settings you'll have the freedom to edit your general account settings, change your password if you so wish, and of course tweak your E-mail notification settings.\n\n---\n\nRead about the User Settings in more detail here!\n\nbr\n\nOrganization Settings\nCheck the Client Settings for a more detailed explanation.\nbrNavigate to the Client Settings by pressing Organization Menu → Importer Settings.\n\n Importer settings\nAfter reaching the Client settings you'll have the option to filter in/out your Lambda Functions. brBy default, all Lambdas are imported (). Filters are a href=\"https://en.wikipedia.org/wiki/Glob_(programming)\"glob patterns/a, meaning you can specify which Lambda Functions you want to import by matching a string and a wildcard ().\n\nbr\n\nAlerting\nThe Alerting tab let's you enable company-wide alerts if your Lambda Functions are experiencing any errors.\n\n---\n\nTo read more about Alerting jump over to that section in our docs, or check out our Organization Settings walkthrough.\n\nbr\n\n Subscriptions\nThe Subscriptions tab defines which subscription you are currently using, with the options of upgrading to other plans.\n\nInvite users\nIf you wish, you can go ahead and invite users to your organization. This way all your team members can have access to the same Organization in your Dashbird account.\n\n---\n\nTake a more concrete peek at these settings over here!\n",
        "tags": []
    },
    {
        "uri": "/content/docs/account-settings/subscription",
        "content": "---\ndate: 2017-06-05\ntitle: Dashbird Free Trial & Subscriptions\nlinktitle: Subscription\ndescription: Dashbird subscriptions are based on your lambda functions and invocations count. Dashbird subscriptions are billed monthly or yearly in advance.\nkbSeries: [\"EAccount Settings\"]\nkbSeries_weight: 300\n---\nDashbird subscriptions are based on your lambda and invocations count. Dashbird usage is billed in advance per organization monthly or yearly.\n\n14-day trial \n\nYou will automatically start your 14-day trial once you sign up for a new Dashbird account. Each organization has a separate subscription and trial period.\n\nYou will have unlimited access to all the Dashbird plans and features during the trial period. After the trial period ends, you are asked to add your credit card information on the Subscription page in order to subscribe to a specific plan and to keep using Dashbird.\n\nSupport for non-profits and startups \n\nWe are helping out startups with special discounts. In order to get it, please write to us and answer following questions:\n\nHow did you find Dashbird?\nHow could you introduce Dashbird to others?\nBlog post topic ideas that you would be willing to write and that would feature Dashbird.\nYour account info and what what kind of support are you looking for?\n\nDiscounts for content contributors \n\nWe are giving special discounts or extended trial time in return of content contributions (either in our blog or as a guest post). Specific deals are agreed upon case-by-case. Get in touch to learn more!\n\nSpecial features \n\nStartup, Pro and Business plans all have extra features that are not included in the Developer plan. These features are Log Search and Webhooks.\nall plan types include customer support\n\nEnding subscription \n\nYou can end your subscription any time from your Subscription page and you will not be charged again by the next billing cycle.\n\nNB: there will be no refunds based on the unused time on your account. You will continue to have access to all the features until your last payment credit runs out (either it was monthly or annual payment).\n\n---\nCheck out what features Dashbird offers and how these can be valuable to you!\n",
        "tags": []
    },
    {
        "uri": "/content/docs/best-practices-and-common-use-cases/error-handling-cs-lambda",
        "content": "---\ndate: 2017-06-05\ntitle: Best Practices - Error Handling With AWS Lambda And C#\nlinktitle: C#\ndescription: Catching and troubleshooting AWS Lambda errors when using C#.\nkbSeries: [\"EBest Practices\"]\nkbSeries_weight: 300\n---\n\nh2\n  span class=\"h2 underlined bold\"\n    Error Handling With AWS Lambda and C#\n  /span\n/h2\n\nStay tuned! New tutorial coming soon...br\nIn the meantime, read how to get an overview of your C# Lambdas or get in touch if you want to contribute a tutorial here!\n\n<!-- - R&D error handling with C#\nre-use content from Python article\nmention common use cases and real-life scenarios --\n",
        "tags": []
    },
    {
        "uri": "/content/docs/best-practices-and-common-use-cases/error-handling-java-lambda",
        "content": "---\ndate: 2017-06-05\ntitle: Best Practices - Error Handling With AWS Lambda And Java\nlinktitle: Java\ndescription: Catching and troubleshooting AWS Lambda errors when using Java.\nkbSeries: [\"EBest Practices\"]\nkbSeries_weight: 300\n---\n\nh2\n  span class=\"h2 underlined bold\"\n    Error Handling With AWS Lambda and Java\n  /span\n/h2\n\nSorry, no tutorial yet. Do you want to write it?br\nWe are looking to publish the best practices of our users in this section, so get in touch and help out!\n\n<!-- - R&D error handling with Java\nre-use content from Python article\nmention common use cases and real-life scenarios --\n",
        "tags": []
    },
    {
        "uri": "/content/docs/best-practices-and-common-use-cases/error-handling-node-lambda",
        "content": "---\ndate: 2017-06-05\ntitle: Best Practices - Error Handling With AWS Lambda And Node.js\nlinktitle: Node.js\ndescription: Catching and troubleshooting AWS Lambda errors when using AWS Lambda with Node.js.\nkbSeries: [\"EBest Practices\"]\nkbSeries_weight: 200\n---\n\nh2\n  span class=\"h2 underlined bold\"\n    Error Handling With AWS Lambda and Node.js\n  /span\n/h2\n\nStay tuned! We don't have the tutorial ready yet, but it's coming soon...br\nIn the meantime, check out our blog for latest product news, case studies and tutorials. \n\n<!-- - R&D error handling with Node.js - maybe Mikk has most experience here\nre-use content from Python article\nmention common use cases and real-life scenarios --\n",
        "tags": []
    },
    {
        "uri": "/content/docs/best-practices-and-common-use-cases/error-handling-python-lambda",
        "content": "---\ndate: 2017-06-05\ntitle: Best Practices - Error Handling With AWS Lambda And Python\nlinktitle: Python\ndescription: Catching and troubleshooting AWS Lambda errors when using AWS Lambda with Python. \nkbSeries: [\"EBest Practices\"]\nkbSeries_weight: 100\naliases:\n /help/python/error-handling-python-lambda/\n /docs/python/error-handling-python-lambda/\n---\n\nh2\n  span class=\"h2 underlined bold\"\n    Error Handling With AWS Lambda and Python\n  /span\n/h2\n\nIf you are running Python on AWS Lambda, you can catch and get alerted for all errors with Dashbird.\n\nDashbird detects the following types of errors\n\n Exceptions\n Errors\n Configuration errors\n Timeouts\n\nErrors are detected and parsed Python exceptions and runtime errors from CloudWatch logs, meaning that developers do not need to attach any agents inside their code.\n\nIn addition, with each error, you get the context. Logs of the whole invocation, along with memory usage, duration and other meaningful metrics.\n\nOn top of that, Dashbird groups similar errors, making it possible to estimate the scope of the problem and make debugging easier. For example, it might help to better observe the problem if you find some commonalities in the executions.\n\nHere's how a Python error looks like in Dashbird.\n!-- <img src=\"/images/docs/python-error.png\" alt=\"Python Error\" --\n!--  --\n\nExceptions\n\nYou can find a href='https://www.tutorialspoint.com/python/pythonexceptions.htm' target='blank'the complete list of Python exceptions here/a.\n\nExceptions are parsed out automatically in Dashbird, and include a rundown of traceback and logs of the specific invocation.\n\n AWS Lambda timeout\n\nAll calls made to AWS Lambda must complete execution within 300 seconds. The default timeout is 3 seconds, but you can set the timeout to any value between 1 and 300 seconds.\n\nNormally, error handling agents are unable to catch timeout errors, because the execution is halted on an upper level. Dashbird, however, reports timeouts like any other type of error.\n\nTimeouts are expressed in Lambda logs in the following way.\n\nREPORT RequestId: 41a10717-e9af-11e7-892c-5bb1a4054ed6  Duration: 300085.71 ms  Billed Duration: 300000 ms Memory Size: 128 MB Max Memory Used: 92 MB\n2017-12-25T20:12:38.950Z 41a10717-e9af-11e7-892c-5bb1a4054ed6 Task timed out after 300.09 seconds\n\nConfiguration errors\n\n Missing module\n\nAnother scenario for errors in AWS Lambda is when you have a missing module included in your function code. In other types of programs, this isn't a very common occurence since a developer would catch that right away. However, with Lambdas, the container is started up on demand, masking the problem until the user encounters it.\n\nWhat's important to note here, is that configuration errors are also not reported with agents, since the code execution does not reach the handler.\n\nHere's how it looks like:\n\nSTART RequestId: db1e9421-724a-11e7-a121-63fe49a029e8 Version: $LATEST\n\nUnable to import module 'lambdafunxction': No module named 'lambdafunxction'\n\nREPORT RequestId: db1e9421-724a-11e7-a121-63fe49a029e8  Duration: 15.11 ms Billed Duration: 100 ms  Memory Size: 128 MB  Max Memory Used: 18 MB\n\nMissing handler\n\nSTART RequestId: db1e9421-724a-11e7-a121-63fe49a029e8 Version: $LATEST\n\nHandler 'lambda_handlerx' missing on module\n\nREPORT RequestId: db1e9421-724a-11e7-a121-63fe49a029e8 Duration: 15.11 ms Billed Duration: 100 ms Memory Size: 128 MB Max Memory Used: 18 MB\n",
        "tags": []
    },
    {
        "uri": "/content/docs/faq/choose-which-lambdas-to-monitor",
        "content": "---\ndate: 2017-06-05\ntitle: FAQ - Picking Specific AWS Lambda Functions To Monitor\nlinktitle: Can I choose which lambda functions to monitor?\ndescription: Can you pick and choose which specific lambda functions you want to track and monitor? Yes, you can filter the functions in Dashbird.\nkbSeries: [\"FFAQ\"]\nkbSeries_weight: 700\n---\n\nh2\n  span class=\"h2 underlined bold\"\n    Can I choose which lambda functions to monitor?\n  /span\n/h2\nYes!\n\nYou can control our log importer by specifying filters.\nbrNavigate to **Menu - Importer settings**\n\nFilters are a href='https://en.wikipedia.org/wiki/Glob(programming)' target='blank'glob patterns/a.\n\nUse codesome-service-/code to include and code!some-service-prod-/code to exclude lambda functions. You can also use the name includes or name excludes to filter functions.\n\nBy default, all lambda functions are imported to Dashbird.\n\n---\n\nCheck out our step by step guide to read about it in more detail!\n\n<!-- - this is already good :)\nadd more stylish writing\nlink to /docs/get-started/say-hi-to-dashbird/ --\n",
        "tags": []
    },
    {
        "uri": "/content/docs/faq/does-dashbird-have-latency",
        "content": "---\ndate: 2017-06-05\ntitle: FAQ - AWS Lambda Monitoring Latency\nlinktitle: Does Dashbird have latency?\ndescription: Does Dashbird data have any delays? It usually takes only 1-2 minutes to see your execution data. \nkbSeries: [\"FFAQ\"]\nkbSeries_weight: 400\n---\n\nh2\n  span class=\"h2 underlined bold\"\n    Does Dashbird have latency?\n  /span\n/h2\nIt normally takes about 1-2 minutes from execution data to be visible in Dashbird.\n\nLatency is the delay between giving a system input and until it returns the desired outcome. Dashbird has a ~60 second latency because we fetch logs from your AWS account. Check out our detailed explanation on Latency to learn more!\n\n<!-- - explain what latency is\nexplain what is the latency with Dashbird\nwhy does Dashbird have latency\nlink to /docs/learn/latency --\n",
        "tags": []
    },
    {
        "uri": "/content/docs/faq/how-to-change-password",
        "content": "---\ndate: 2017-06-05\ntitle: FAQ - Changing Dashbird Password\nlinktitle: How do I change my password?\ndescription: Do you need to change your Dashbird account password? You can do that on your profile page. \nkbSeries: [\"FFAQ\"]\nkbSeries_weight: 500\n---\n\nh2\n  span class=\"h2 underlined bold\"\n    How do I change my password?\n  /span\n/h2\nNavigate to the user profile page, where you can press to change your password.\nbrTo change your password: **Menu - Profile - General settings - Password - Click here to change password**\n\nYou'll be taken to a change password page.\n\nEnter your new password, and voila, that's it!\n\n<!-- - explain how to change pass\nadd screenshot\nlink to /docs/get-started/say-hi-to-dashbird/ (all basic profile settings will be explained there - pass reset, changing basic info and session history) --\n",
        "tags": []
    },
    {
        "uri": "/content/docs/faq/how-to-delete-account",
        "content": "---\ndate: 2017-06-05\ntitle: FAQ - How To Delete Account\nlinktitle: How do I delete my account?\ndescription: If you need to delete your Dashbird account and revoke it's access to your AWS accounts, contact our support team. \nkbSeries: [\"FFAQ\"]\nkbSeries_weight: 800\n---\n\nh2\n  span class=\"h2 underlined bold\"\n    How do I delete my account?\n  /span\n/h2\nYou can disable Dashbird from accessing your AWS by deleting the Role and Policy created on signup.\nTo delete your account, please contact support inside the app or via email at a href='mailto: support@dashbird.io'support@dashbird.io/a.\n",
        "tags": []
    },
    {
        "uri": "/content/docs/faq/how-to-invite-team-members",
        "content": "---\ndate: 2017-06-05\ntitle: FAQ - Inviting Team Members To Dashbird\nlinktitle: How do I invite my team members?\ndescription: Want to use Dashbird platform with your whole company? There are no additional costs for it and you can invite team members to join from the Users page. \nkbSeries: [\"FFAQ\"]\nkbSeries_weight: 600\n---\n\nh2\n  span class=\"h2 underlined bold\"\n    How do I invite my team members?\n  /span\n/h2\nYou can invite as many team members to Dashbird as you like.\n\n**Menu - Users - Add +**\n\nFill in the form:\n\nCheck out the detailed explanation in our step by step guide.\n\n<!-- - explain the what \"organizations' are\nexplain the principle of how Dashbird views adding team members as positive - or some motivational crap :)\nexplain how you add team members\nadd screenshot and concrete ste-by-step guide\nlink to /docs/get-started/say-hi-to-dashbird/ --\n",
        "tags": []
    },
    {
        "uri": "/content/docs/faq/how-to-set-up-dashbird",
        "content": "---\ndate: 2017-06-05\ntitle: FAQ - Setting Up AWS Lambda Monitoring With Dashbird\nlinktitle: How do I set up Dashbird?\ndescription: Having trouble setting up Dashbird for serverless monitoring? It's very easy and takes only a couple of minutes. You need to link it to your AWS account. \nkbSeries: [\"FFAQ\"]\nkbSeries_weight: 100\n---\n\nh2\n  span class=\"h2 underlined bold\"\n    How do I set up Dashbird?\n  /span\n/h2\nSetting up Dashbird takes under 5 minutes and requires no code changes.\n\nTo start, sign up and follow the on-screen instructions to link your AWS account with Dashbird.\n\nFull instructions can be found here.\n\n<!-- - talk about ease of use and good UX\nvery fast to set up\neasy to use\nno code changes\neasy integrations\nadd links to get-started section --\n",
        "tags": []
    },
    {
        "uri": "/content/docs/faq/is-there-added-cost",
        "content": "---\ndate: 2017-06-05\ntitle: FAQ - Additional Costs For Using Log Based Monitoring\nlinktitle: Is there added cost to my AWS bill?\ndescription: There is almost no additional cost to your AWS bill when you are using log based monitoring tools like Dashbird. \nkbSeries: [\"FFAQ\"]\nkbSeries_weight: 300\n---\n\nh2\n  span class=\"h2 underlined bold\"\n    Is there added cost to my AWS bill?\n  /span\n/h2\nThere is ualmost no added cost/u to your AWS bill.\n\nAWS prices Data-transfer out of CloudWatch equivalently to Data-transfer from EC2. brCheck it out for yourself on AWS at a href=\"https://aws.amazon.com/cloudwatch/pricing/\" target='_blank'CloudWatch pricing/a\n\nThe first GB of the month is free, with every GB after that $0.09.br\nThe amount added to your bill is insignificant. Here's an article explaining it in more detail.\n\n<!-- - explain how data transfer works on AWS\nexplain the ridiculously tiny price\nemphasis on insignificant add to cost\nlink to article on \"cutting costs with going serverless\" --\n",
        "tags": []
    },
    {
        "uri": "/content/docs/faq/is-there-any-overhead",
        "content": "---\ndate: 2017-06-05\ntitle: FAQ - AWS Lambda Performance Monitoring Overhead\nlinktitle: Is there any overhead?\ndescription: Worried about your monitoring tool affecting your lambda functions? Worry not, Dashbird gets all the necessary data out of CloutWatch logs and doesn't affect the performance of your functions at all.\nkbSeries: [\"FFAQ\"]\nkbSeries_weight: 200\n---\n\nh2\n  span class=\"h2 underlined bold\"\n    Is there any overhead?\n  /span\n/h2\nDashbird does unot/u affect the performance of your lambda functions.\n\nDashbird gets all of the information from logs when they reach AWS CloudWatch, meaning that the service has no effect on the execution itself.\n\nRead more about overhead and how Dashbird avoids it here.\n\n<!-- - what is overhead?\nexplain why Dashbird is fast\nexplain how it does not affect performance\nvery small to no impact on AWS bill - segway to next FAQ\nlink to /docs/learn/overhead/ --\n",
        "tags": []
    },
    {
        "uri": "/content/docs/get-started/quick-start",
        "content": "---\ndate: 2017-06-05\ntitle: Quick Start Tutorial For Dashbird Serverless Monitoring\nlinktitle: Quick start\ndescription: Quick start\nkbSeries: [\"BGet Started\"]\nkbSeries_weight: 200\naliases:\n /setup\n /docs/getting-started/setting-up-dashbird/\n /docs/getting-started/get-started/\n /help/basic/get-started\n---\n\nIf you haven't already, **sign up for Dashbird here** to access the onboarding screen.\n\nh2\n  span class=\"h2 underlined bold\"Requirements for setting up Dashbird/span\n/h2\n\n To set up Dashbird you need to have the following:\nAdministrator access to your AWS account\n\nOpen the link to the onboarding screen from your e-mail.\n\nbr\n\nh2\n  span class=\"h2 underlined bold\"1. Create a new bAWS policy/b for Dashbird/span\n/h2\n\nOpen your a href=\"https://console.aws.amazon.com\" target=\"_blank\"AWS console/a.\nNavigate to IAM → Policies → Create Policy.\nChoose the JSON tab and paste the snippet below into the editor\n\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"logs:FilterLogEvents\",\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"logs:describeLogStreams\",\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": \"lambda:listFunctions\",\n            \"Resource\": \"*\"\n        }\n    ]\n}\n\nPress Review Policy and move on to add a name and description\n  Name: dashbird-policy\n  Description: Allow Dashbird to read CloudWatch logs.\nMove on and press Create Policy\n\nGreat! You've created an access policy. Now you need to add an AWS role.\n\nbr\n\nh2\n  span class=\"h2 underlined bold\"2. Add a new bAWS role/b for Dashbird/span\n/h2\n\nNavigate to IAM → Roles → Create New Role.\nSelect\n  Another AWS account\nFill out the following:\n Account ID: 458024764010 - This is Dashbird's AWS account.\n Check the Require external ID checkbox\n External ID: copy from the onboarding app\n Require MFA: false\n Click Next: Permissions\nSelect previously created dashbird-policy from the policies list.\nClick Next: Review\nFill out the following for role name and description\n Role name: dashbird-delegation-role\n Role description: Access role for Dashbird to read CloudWatch logs.\n Click Create role\nFind the created role in the list and open it.\nIf you have done everything correctly, the screen will look something like this.\n\nCopy the ARN of the role\n\nbr\n\nh2\n  span class=\"h2 underlined bold\"3. Setup Dashbird with the created role/span\n/h2\n\nBack on the onboarding screen:\n\nInsert your (company) name\nSelect your target region.\nPaste the Role ARN you copied above.\nClick Finish!\n\nDashbird will check if it has access to your AWS account. If everything is set up correctly, you are redirected to the app.\n\nIt should take approximately 3-4 minutes for the data to start coming in.\n",
        "tags": []
    },
    {
        "uri": "/content/docs/get-started/setting-up-your-account",
        "content": "---\ndate: 2017-06-05\ntitle: Dashbird Account Setup In 2 Minutes\nlinktitle: Setting up your account\ndescription: Setting up your Dashbird account takes only a few minutes and doesn't need any code changes or wrappers getting implemented. \nkbSeries: [\"BGet Started\"]\nkbSeries_weight: 200\nalias:\n  /help/settings/configuring-dashbird/\n  /docs/settings/configuring-dashbird/\n---\n\nOnce you've configured your AWS account to connect to Dashbird, get ready to find out the basics about your account settings.\n\nUser settings\n\ndiv class=\"row\"\n  div class=\"col-md-7 col-sm-12 col-xs-12 text-md-left pt-3\"\n    p class=\"lato\"Navigating to the a href=\"https://app.dashbird.io/profile\"Profile/a settings is super simple, just choose the bProfile/b option from the dropdown menu in the top right corner of the navigation bar./p\n  /div\n  div class=\"col-md-5 col-sm-12 col-xs-12 imgs-fluid\"\n    img src='/images/docs/profile-menu-dropdown.png'\n  /div\n/div\n\nAfter reaching the User settings you'll have the freedom to edit your general account settings, change your password if you so wish, and of course tweak your E-mail notification settings.\n\nbr\n\n Session history\nAnother incredibly convenient feature is the ability to have an overview of all user sessions your account has been accessed with. But, it doesn't stop there, you can also revoke any session you want, giving you another layer of security regarding account access. Now that's just cool.\n\nbr\n\nStart auto reload\ndiv class=\"row\"\n  div class=\"col-md-7 col-sm-12 col-xs-12 text-md-left pt-3\"\n    p class=\"lato\"The final thing to learn about your account's basic setup is the codestart auto reload/code button in the top navigation bar./p\n  /div\n  div class=\"col-md-5 col-sm-12 col-xs-12 imgs-fluid\"\n    img src='/images/docs/profile-auto-reload.png'\n  /div\n/div\nBy toggling this to on, you'll have enabled the auto reload feature for all graphs across your entire account. No need to hit F5, just let Dashbird reload everything automagically for you!\n\n---\n\nLearn more about account configuration by checking out the next section, or take a look at the account overview for a complete guide.\n",
        "tags": []
    },
    {
        "uri": "/content/docs/get-started/step-by-step-guide",
        "content": "---\ndate: 2017-06-05\ntitle: Dashbird Serverless Monitoring Step By Step Guide\nlinktitle: Step by step guide\ndescription: Step by step guide that gives software engineers and CTOs the most comprehensive overview of Dashbird's monitoring and debugging features. \nkbSeries: [\"BGet Started\"]\nkbSeries_weight: 300\n---\n\nDashbird's goal is to give you an easy way to monitor your AWS Lambda Functions. We manage this through the concept of using Organizations, where one organization is one connected AWS Account. Check this out  for a more detailed explanation!\n\nBut for now, let's jump into explaining the Organization settings.\n\nImporter settings\ndiv class=\"row\"\n  div class=\"col-md-7 col-sm-12 col-xs-12 text-md-left pt-3\"\n    p class=\"lato\"Go ahead and navigate to the a href=\"https://app.dashbird.io/clients\"Importer settings/a page. It's the dropdown menu which looks like a tiny house./p\n    p class=\"lato\"By default, ball Lambdas/b are imported code(*)/code. /p\n    p class=\"lato\"Add one or more bfilters/b to select the right subset of Lambda Functions. Filters are a href=\"https://en.wikipedia.org/wiki/Glob_(programming)\"glob patterns/a, meaning you can specify which Lambda Functions you want to import by matching a string and a wildcard(). For instance, filter code-prod-*/code matches all function names like codeservice-prod-functionName/code./p\n  /div\n  div class=\"col-md-5 col-sm-12 col-xs-12 imgs-fluid\"\n    img src='/images/docs/client-importer.png'\n  /div\n/div\n\nbr\n\n Alerting\nThe Alerting tab let's you enable company-wide alerts if your Lambda Functions are experiencing any errors. You can toggle digestions if errors keep happening, and enable sending e-mails or notifications to a Slack integration. To read more about Alerting jump over to that section in our docs.\n\nbr\n\nSubscriptions\nThe Subscriptions tab defines which subscription you are currently using, with the options of upgrading to other plans.\n\n Invite users\nIf you wish, you can go ahead and invite users to your organization. This way all your team members can have access to the same Organization in your Dashbird account.\n\nOn the Invite users tab you can see which users are connected to the organization. It's as easy as just pressing the Add+ button and filling out a form, to add another user.\n\nbr\n\nThe Organization settings make a lot more sense now. Moving on let's check out the general layout of the Dashbird app!\n\nLeft Side Navigation\n div class=\"row\"\n  div class=\"col-md-5 col-sm-12 col-xs-12 imgs-fluid\"\n    img src='/images/docs/left-side-nav.png'\n  /div\n  div class=\"col-md-7 col-sm-12 col-xs-12 text-md-left pt-3\"\n    p class=\"lato\"The side navigation is your primary means of navigating between Dashbird's main features. You can:/p\n    ul\n      liList all Lambda Functions/li\n      liDebug Functions with Live Tailing/li\n      liCheck your Alerts/li\n      liList all Projects/li\n      liDo an account-wide search/li\n    /ul\n  /div\n/div\n\nbr\n\n Main Dashboard\nThe main dashboard is what you'll see once you sign in to your Dashbird account. It's where your most important metrics are, and where you have a bird's eye perspective on your whole system! Of course, you can navigate back to the main dashboard by clicking the Dashbird logo in the top left corner of your screen.\n\nYou can quickly filter metrics based on when they occurred. Last 24h, yesterday, this week or this month are the quick settings which are available.\n\nThe main dashboard is also where you can have a glimpse at your errors and alerts. All of them are readily available to see in more detail through hot links in the UI.\n\n---\n\nThis wraps up the Get Started section, go ahead and move on to the User Guide for more hands-on tutorials on how to get the best out of Dashbird!\n",
        "tags": []
    },
    {
        "uri": "/content/docs/learn/competitors-comparison",
        "content": "---\ndate: 2017-06-05\ntitle: Dashbird vs Datadog vs IOpipe\nlinktitle: Competitive edge\ndescription: Dashbird is using CloudWatch logs to make sense of your lambda functions and to give an actionable overview.\nkbSeries: [\"ALearn\"]\nkbSeries_weight: 800\n---\n\nh2\n  span class=\"h2 underlined bold\"\n    Dashbird\n  /span\n/h2\n\nCurrently Dashbird uses logs for everything. This gives a real-life overview of things happening with your lambda functions and a possibility to deep dive into a single execution and see all logs from there.\n\nFetching logs is also the cheapest way to gather data, costing only 0.010$ per GB.\n\nTaking this approach, Dashbird experience can be really low friction and high granularity, with a price of slight delay. Users don't need to make any code changes but still get a really good overview, with the possibility to go very deep into a function, seeing all the need data.\n\nPROS:\nlow cost\nhigh granularity\nvery easy support for all languages (it just needs a few examples and a few lines of code changes on our part)\nlow friction\nability to get all the specific logs for an invocation\n\n CONS:\nuser needs to give access to their AWS account (read only)\nslightly bigger delay\na potential max amount we can import per month (possible to overcome with sampling), due to AWS API constraints.\n\nLearn more about all the a href=\"https://dashbird.io/docs/learn/features/ target=\"blank\" benefits and features Dashbird offers.a/\n\nh2\n  span class=\"h2 underlined bold\"\n    Datadog\n  /span\n/h2\n\nDatadog uses StatsD protocol and metrics to capture information about lambdas. StatsD (or DogStatsD) is a time series metrics protocol where you can push custom events (like tasks added N) and then show data in Datadog environment. Using Statsd protocol means that you have to use Datadog library in your code and push the metrics manually.\n\nDatadog is doing monitoring that is based on metrics and that means they are fetching all the required metrics for lambda functions and then showing them on their dashboard. This approach is also low friction, but has a really low granularity (metrics are gathered and aggregated to 1 minute intervals). It's a really good way to get a nice overview of your lambda functions, but you won't see the real problems.\n\nMetrics also have the cost issue. Fetching metrics costs 0.01$ per 1,000 requests. One lambda function has 5 metrics (invocations, durations, throttles, errors, concurrent executions), this means fetching all metrics for one lambda function will cost the user (56024300.01 / 1000) 2.16 USD per month. This is quite a high cost given that you only get really high level overview of ONE lambda function. We have learned that the average size lambda stack contains of 60 functions, costing the user average of 60*2.16 = 129.6 USD just to see a really high level overview of their lambdas (without the possibility to dive deep into the errors and fixing them quickly).\n\nPROS:\ncustom events via StatsD protocol\nlow friction\n\n CONS:\nuser needs to give access to their AWS\nrelatively high cost when dealing with large lambda services\nreally low granularity\nnot possible to dive into request specifics\nno logs\n\nh2\n  span class=\"h2 underlined bold\"\n    IOpipe\n  /span\n/h2\n\nIOpipe uses their own library to send data to clients. This essentially means that the client needs to add IOPIPEs code into their own codebase. It brings a certain overhead to lambda functions and that can potentially be bad.\n\nThe good thing about IOpipe's approach is that they instrument the runtime the lambda function is running inside. Meaning that you will get a deep technical overview of your invocation, which can help the users to understand and fix potential bottlenecks with their functions.\n\nIOpipe does not automatically fetch lambda invocation logs, however they have a functionality to log through their system. Which is not ideal. It's one thing to attach a library to instrument data to your code base, it's another thing to rewrite logging to fit that instrumentation.\n\nThat being said, their approach of sending you data means that they have no potential max amount of data they can receive. The approach that IOpipe has taken, can be used with unlimited amount of invocations, assuming that their backend can handle the load.\n\nIOpipe's approach also means that they can only support a few languages, currently they only support Node and are working on JVM based languages and that can be a huge disadvantage.\n\nPROS:\nlow cost (it costs almost nothing to send data to clients)\nhigh technical insights of function performance (can drill down to request overhead etc)\ndepends on the implementation, but potentially realtime debugging possibilities\nuser does not need to give access to their AWS\nhard to off-board (changing all lambda functions is a headache)\n\n CONS:\nlogging does not work out of the box (logging calls need to be send through IOpipe)\nlibrary needs to be added to the function manually\nhigh friction\noverhead to lambda invocation execution times\ndependent on IOpipe's platform (if there is a bug in the wrapper your lambda might fail because of that)\nonly supports a few languages\nreally hard to add new languages\n\n---\n **Note**: Given that all these tools are in continuous development, please let us know if any of this information is not up-to-date.\n",
        "tags": []
    },
    {
        "uri": "/content/docs/learn/features",
        "content": "---\ndate: 2017-06-05\ntitle: Dashbird Serverless Monitoring & Debugging Features\nlinktitle: Features\ndescription: Launch great serverless software and websites with the help of Dashbird. See central lambda functions overview, get error notifications and much more.\nkbSeries: [\"ALearn\"]\nkbSeries_weight: 200\n---\n\nDashbird makes sure your application works at all times. It works by collecting logs through your AWS Cloudwatch API.\n\nBy fetching existing logs from your AWS account, Dashbird helps you have a bird's eye perspective on all Lambda Functions, resources, and services.\n\nKeep reading to get detailed insight into what Dashbird has to offer.\nbrOr, click here to jump into our Quick Start!\n\nh2\n  span class=\"h2 underlined bold\"Real-Time Lambda Insights/span\n/h2\nSee actionable and instant metrics of errors, invocations, durations and memory usage. Troubleshoot and analyze each invocation with log and runtime data.\n\na href='/images/features/function-monitoring.png' target=\"_blank\"img alt='Main dashboard' src='/images/features/function-monitoring.png'/a\n\nbr\n\nh2\n  span class=\"h2 underlined bold\"Error Alerting and Debugging/span\n/h2\nGet alerts of errors across all your Lambda functions. Stack traces and context helps you troubleshoot errors quickly and easily.\n\na href='/images/screens/error.png' target=\"_blank\"img alt='Project dashboard' src='/images/screens/error.png'/a\n\nbr\n\nh2\n  span class=\"h2 underlined bold\"Overview of All Functions/span\n/h2\nMetrics that show you where you have the most traffic and how your system is performing across the board.\n\na href='/images/docs/functionview.png' target=\"_blank\"img alt='Function dashboard' src='/images/docs/functionview.png'/a\n\nbr\n\nh2\n  span class=\"h2 underlined bold\"Global and Local Search/span\n/h2\nQuickly and painlessly search through the logs of from one or multiple lambdas.\n\na href='/images/features/global-search.png' target=\"_blank\"img alt='Invocation view' src='/images/features/global-search.png'/a\n\nbr\n\nh2\n  span class=\"h2 underlined bold\"Seamless Tracing of Invocations/span\n/h2\nDashbird seamlessly integrates with X-ray, giving you great insights of what your invocation actually does.\n\na href='/images/features/x-ray.png' target=\"_blank\"img alt='Error view' src='/images/features/x-ray.png'/a\n\nbr\n\nh2\n  span class=\"h2 underlined bold\"Live Function Tailing/span\n/h2\nDashbird makes debugging easy. Receive logs for your functions in real-time.\n\na href='/images/features/live-tailing.png' target=\"_blank\"img alt='Error view' src='/images/features/live-tailing.png'/a\n\nbr\n\nh2\n  span class=\"h2 underlined bold\"Monitor Limited Sets of Functions/span\n/h2\nDashbird let's you create projects of hand-picked Lambdas to monitor. Want a udedicated/u dashboard only showing the functions you have in production? Easy, ucreate a project/u.\n\na href='/images/features/project-overview.png' target=\"_blank\"img alt='Error view' src='/images/features/project-overview.png'/a\n\nbr\n\nh2\n  span class=\"h2 underlined bold\"Next steps.../span\n/h2\n Click here to get started with Dashbird!\nIf you're curious and want to read about how Dashbird works, check this out!\n",
        "tags": []
    },
    {
        "uri": "/content/docs/learn/how-it-works",
        "content": "---\ndate: 2017-06-05\ntitle: Dashbird Works By Using AWS Public APIs\nlinktitle: How it works?\ndescription: Dashbird connects with AWS public APIs and collects logs from CloudWatch. We turn these logs into actionable metrics that can be used for monitoring serverless functions. \nkbSeries: [\"ALearn\"]\nkbSeries_weight: 300\naliases:\n /help/basic/how-it-works/\n /docs/user-guide/how-it-works/\n---\n\nDashbird uses AWS public APIs to fetch data from your AWS account and produces actionable metrics and detailed data without the need of editing any code!\n\nFor this, Dashbird does need ulimited/u read access to your AWS account to collect the data.  \nYou give Dashbird access by using built-in tools on AWS to create policies and roles. Click here to find detailed instructions.\nh2\n  span class=\"h2 underlined bold\"What lambdas we are importing/span\n/h2\n\nDashbird polls lambdas from all regions after a fixed interval of 10 minutes. By default all Lambda functions will be imported. It's possible to create custom limits for lambda importing from client settings.\n\nh2\n  span class=\"h2 underlined bold\"Fetching data/span\n/h2\n\nDashbird periodically polls your AWS account for data and saves everything to our local server. All the data we receive is encrypted and stored safely.\nAll the data is saved to bus-east-1/b region.\n\nThe exact polling interval is determined by the amount of lambdas and the amount of requests they have. We usually poll data a few times a minute for a single lambda.\n\nPolling honours AWS limits and we track each and every throttle error from the AWS Api. We are do our best not to overwhelm AWS Apis, however if there are other services using the same client APIs then throttles might still occur.\n\nh2\n  span class=\"h2 underlined bold\"Aggregator/span\n/h2\nAfter importing the first batch of logs, an aggregator starts, going through all imported data and extracting metrics by each invocation. The Aggregator detects the result, duration, memory usage and other meaningful information about the invocation.\n\nh2\n  span class=\"h2 underlined bold\"Error detection/span\n/h2\nDashbird udetects errors from invocations/u and shows them in the UI for users to see and debug. Errors are categorized by similarity.\n",
        "tags": []
    },
    {
        "uri": "/content/docs/learn/latency",
        "content": "---\ndate: 2017-06-05\ntitle: Does Dashbird Have Any Latency?\nlinktitle: Latency\ndescription: It typically takes close to 60 seconds for Dashbird to visualise your data.\nkbSeries: [\"ALearn\"]\nkbSeries_weight: 600\n---\n\n**Note**: Latency is the delay between giving a system input and until it returns the desired outcome.\n\nh2\n  span class=\"h2 underlined bold\"\n    What is the latency of Dashbird?\n  /span\n/h2\n\nIt usually takes about u60 seconds/u for execution data to be visible in Dashbird.\n",
        "tags": []
    },
    {
        "uri": "/content/docs/learn/overhead",
        "content": "---\ndate: 2017-06-05\ntitle: Dashbird has NO Overhead!\nlinktitle: Overhead\ndescription: There's no overhead to Dashbird. Dashbird doesn't affect your code or lambda functions performance in any way. \nkbSeries: [\"ALearn\"]\nkbSeries_weight: 700\n---\n\n**Note**: Overhead is the additional computing power, or excess computation time your system un-necessarily needs to spend to complete a certain task.\n\nh2\n  span class=\"h2 underlined bold\"\n    Is there any overhead?\n  /span\n/h2\n Dashbird does unot/u affect the performance of your lambda functions.\n\nDashbird gets all of the information from logs when they reach AWS CloudWatch, meaning that the service has no effect on the execution itself.\n",
        "tags": []
    },
    {
        "uri": "/content/docs/learn/reliability",
        "content": "---\ndate: 2017-06-05\ntitle: Reliability Of Dashbird\nlinktitle: Reliability\ndescription: Dashbird is hosted on AWS servers and we have over-provisioned our importer stacks to a point that if half of our serveres fail, we can still serve the product to our clients.\nkbSeries: [\"ALearn\"]\nkbSeries_weight: 500\n---\n\nWe at Dashbird ucare/u about your user experience. Dashbird is hosted on ustate-of-the-art AWS servers/u, uptime is guaranteed!\n\nh2\n  span class=\"h2 underlined bold\"\n    What if things fail?\n  /span\n/h2\nWe have ubover-provisioned/b/u our a href=\"/docs/learn/how-it-works/\"importer stacks/a to a point that if half our servers fail for any reason, we could still carry on serving the whole production load for all our clients. Currently our main importing workflow is being hosted on bus-east-1/b, but we also have idle backups ready on bus-east-2/b.\n\nh2\n  span class=\"h2 underlined bold\"\n    What if I have a question or a problem?\n  /span\n/h2\n\nYou can write to us from the app. The tiny chatbox in the bottom-right corner will send us an instant message. If you like email, shoot us a message at a href='mailto: support@dashbird.io'support@dashbird.io/a. We are dedicated to supporting our users and aim to urespond in less than an hour/u.\n",
        "tags": []
    },
    {
        "uri": "/content/docs/learn/security",
        "content": "---\ndate: 2017-06-05\ntitle: Dashbird Security Overview\nlinktitle: Security\ndescription: Dashbird is taking security very seriously. Our clients' data is encrypted and stored in AWS S3 buckets.\nkbSeries: [\"ALearn\"]\nkbSeries_weight: 400\n---\n\nWe at Dashbird take your security seriously, by keeping your data on uencrypted/u drives.\nBy using encrypted AWS S3 buckets to store your data, we uphold maximum security so you don't need to worry.\n\nh2\n  span class=\"h2 underlined bold\"\n    How is my data stored in Dashbird?\n  /span\n/h2\n\nDashbird imports logs from your AWS CloudWatch API and stores them in a udedicated/u and uencrypted/u bucket in S3. After that, logs are aggregated and analyzed into data metrics, which are then stored in a usecure database/u hosted on AWS.\n\nh2\n  span class=\"h2 underlined bold\"\n    What if I have a question or a problem?\n  /span\n/h2\n\nYou can write to us from the app. The tiny chatbox in the bottom-right corner will send us an instant message. If you like email, shoot us a message at a href='mailto: support@dashbird.io'support@dashbird.io/a. We are dedicated to supporting our users and aim to urespond in less than an hour/u.\n",
        "tags": []
    },
    {
        "uri": "/content/docs/learn/what-is-dashbird",
        "content": "---\ndate: 2017-06-05\ntitle: What Is Dashbird?\nlinktitle: What's Dashbird?\ndescription: Dashbird is the leading serverless monitoring and troubleshooting platform that helps software engineers to launch agile serverless websites and software.\nkbSeries: [\"ALearn\"]\nkbSeries_weight: 100\naliases:\n /help/basic/basics/\n /docs/user-guide/intro/\n /docs/learn/core-benefits/\n---\n\nDashbird is a service to monitor, debug and improve your Lambda Functions.\n It's tailor made to help develop Serverless apps.\n\nUsing Serverless architectures is one of the fastest and cheapest ways of building scalable and cheap back end applications. Yet, with large architectures, they can sometimes be hard to monitor and debug.\n\nTo understand the core benefits of using Dashbird go ahead and continue reading.\nbrOr, click here to jump into our Quick Start!\n\nh2\n  span class=\"h2 underlined bold\"Core Benefits/span\n/h2\nDashbird provides an overview of all Lambda executions across your entire account. Making it incredibly easy to keep an eye on all Lambda Functions and to know what's going on at any given moment.\n\na href='/images/docs/overview.png' target=\"_blank\"img alt='Main dashboard' src='/images/docs/overview.png'/a\n\nbr\n\nh2\n  span class=\"h2 underlined bold\"Project view/span\n/h2\nDashbird allows you to group Lambda Functions any way you like. This allows you to construct a dashboard for a service or set of functions. It will outline the load, any problems you might face, the cost and other important metrics.\n\na href='/images/docs/serviceview.png' target=\"_blank\"img alt='Project dashboard' src='/images/docs/project-view.png'/a\n\nbr\n\nh2\n  span class=\"h2 underlined bold\"Function view/span\n/h2\nThis dashboard shows health, cost and other meaningful statistics of a single Lambda Function. You can also see the invocation history and pinpoint errors at a glance.\n\na href='/images/docs/functionview.png' target=\"_blank\"img alt='Function dashboard' src='/images/docs/functionview.png'/a\n\nbr\n\nh2\n  span class=\"h2 underlined bold\"Invocation view/span\n/h2\nAn overview with logs for each invocation.\n\na href='/images/docs/invocation.png' target=\"_blank\"img alt='Invocation view' src='/images/docs/invocation.png'/a\n\nh2\n  span class=\"h2 underlined bold\"Error tracking/span\n/h2\nTrack your Lambdas in real time and debug errors with stack traces, just like you're used to.br Dashbird detects errors in your code as well. You can fix errors immediately when something is visibly wrong!\n\na href='/images/docs/errorview.png' target=\"_blank\"img alt='Error view' src='/images/docs/errorview.png'/a\n\nh2\n  span class=\"h2 underlined bold\"Next steps.../span\n/h2\nClick here to get started with Dashbird!\n If you're curious, and want to read about how Dashbird works, check this out!\n",
        "tags": []
    },
    {
        "uri": "/content/docs/user-guide/alerting",
        "content": "---\ndate: 2017-06-05\ntitle: Instant Alerting with Dashbird\nlinktitle: Alerting\ndescription: Alerting\nkbSeries: [\"CUser Guide\"]\nkbSeries_weight: 200\n---\n\nThe ability to get notified about issues in any part of your application with human-readable messages and sensible logs will save your company hours of debugging and you from staying up at night.\n\nNo error is left behind\nDashbird monitors your entire application and detects all types of errors in a wide range of programming languages.brWant to know what we cover?\n\ncrashes\nearly exits\ntimeouts\ncold starts\nruntime errors\nconfiguration errors\n\nRemember, all of this works for all programming languages supported by AWS Lambda including Node.js, Python, Java, and C, among many others.\n\nBy pressing the alerts button on the left navigation panel you can reach the Alerts page in the Dashbird app. Here you have an overview of all errors in your system. \n\nbr\n\nTroubleshooting\nAll the data you need to troubleshoot errors are at your disposal. Stacktraces, previous occurences, logs and trends for each and every error are available and presented to you in a human friendly manner! By pressing the More info button regarding a particular error, you will see the error page with all the info you need to debug the issue.\n\nbr\n\n Instant notifications\ndiv class=\"row justify-content-md-center align-items-center\"\n    div class=\"col-12 mx-auto\"\n        div class=\"row\"\n            div class=\"col col-xs-12 text-center text-md-left pt-3\"\n                p class=\"lato\"Choose what suits you most. Get notified through E-mail or Slack, or why not both!?/pimg src='/images/features/slack.png'\n            /div\n            div class=\"col col-md-5 col-xs-12 imgs-fluid\"\n                img src='/images/docs/email-alert.png'\n            /div\n        /div\n    /div\n/div",
        "tags": []
    },
    {
        "uri": "/content/docs/user-guide/debugging",
        "content": "---\ndate: 2017-06-05\ntitle: Debugging with Dashbird\nlinktitle: Debugging\ndescription: Debugging\nkbSeries: [\"CUser Guide\"]\nkbSeries_weight: 250\n---\n\nDashbird is built so that developers can detect and understand failures quickly and easily. Sometimes it takes a bit of digging to understand what went wrong with a particular piece of code.\n\nHere are the features/views for effective debugging in Dashbird:\n\n Error views\n Log searching\n Function view\n Live tailing\n Tracing\n\nError views\n\nError view is often the point of failure discovery. It shows you the stack trace, occurence count, logs and a list of reoccurences. Usually developers are able to figure out what went wrong from this view.\n\na href='/images/docs/python-error.png' target=\"_blank\"img alt='Error view' src='/images/docs/python-error.png'/a\n\n Log searching\n\nWith Dashbird, you can search through the logs of all Lambda functions. This is useful for finding specific invocations that are relevant to you.\na href='/images/docs/search.png' target=\"_blank\"img alt='Search' src='/images/docs/search.png'/a\n\nFunction view\nTo debug why a certain function is misbehaving, you can look at the perfomance, resource usage, cost and invocation history of that function, along with all the different errors that function has had. Basically you can put any function under a magnifier glass and work on it. It's a good fit to work with a function view also when developing a function and iterating between deploys.\n\na href='/images/docs/functionview.png' target=\"_blank\"img alt='Function view' src='/images/docs/functionview.png'/a\n\n Live tailing\nUse this to observe function activity in almost real time. Our UI also detect errors and failures on the fly so it's super easy to observe the life of one function that's particularly important.\n\na href='/images/docs/livetailing.png' target=\"_blank\"img alt='Live tailing' src='/images/docs/livetailing.png'/a\n\nTracing\nOur integration with X-Ray connects each invocation with an trace and gives you a breakdown of execution. a href='/docs/user-guide/tracing'Read about tracing from here./a\n",
        "tags": []
    },
    {
        "uri": "/content/docs/user-guide/integrations",
        "content": "---\ndate: 2017-06-05\ntitle: Dashbird Integrations\nlinktitle: Integrations\ndescription: Integrate Dashbird with Slack or Zapier to get instant error alerts or build your own integration using webhooks.\nkbSeries: [\"CUser Guide\"]\nkbSeries_weight: 500\nalias:\n  /help/integrations/managing-webhooks/\n  /docs/integrations/managing-webhooks/\n---\n\nSlack \nGet instant error alerts in your Slack channels. To set it up, go to Alerts section from the upper right menu and on the bottom part of the Alerting section click on the Slack logo and configure the settings. Here you can choose the Slack channel where the error alerts will get delivered.\n\nYou can also use alert digestion, which means you will get alerted every x minutes about the errors that have happened. This can also be configured on the Alerts page.\n\nZapier \nWebhooks are the foundation for all integrations out of Dashbird. To create an integration with other services, we recommend first integrating Dashbird with Zapier and then using an integration from Zapier to other services.\n\nHow it works:\n\nyou have an endpoint\nyou set up a webhook from Dashbird side to push events to that endpoint\nevery time we have a certain event that will be pushed there\n\nWebhooks \n\nWebhooks can be set up separately for each lambda. To configure a webhook, open up a href='https://app.dashbird.io/lambdas' target='_blank'Lambda list/a and select the function you want to integrate. You can access the configuration screen under Webhooks tab.\n\nAs a first request after configuring a webhook, Dashbird will try to validate the remote endpoint. For that a POST request with a following payload is made.\n\n{\n    \"ref\": \"1f3ac2f4-c25f-42c6-a131-08b7575abdb5\",\n    \"createdAt\": 1518048245419,\n    \"event\": \"VALIDATION\"\n}\n\nThe endpoint is considered valid when the remote endpoint responds with the following payload.\n\n{\n  \"status\": \"success\"\n}\n\nIf the remote endpoint fails to respond with this payload, the request will be retried with 30 second intervals for 3 times. After which, you can manually retry the webhook with the refresh button.\n\nSupported events\n\nYou can choose the events on which the requests are triggered. We will add more in the future.\n\nINVOCATION_ERROR - triggers each time a lambda execution fails\n\nERRORGROUPCREATED - triggers each time a new error has occurred\n\nERRORGROUPUPDATED - triggers if a new error occurrence was found in importing patch. A new importing patch is imported about every minute, given that the lambda function is active enough.\n\n---\n\nCheck out how you can set up error alerting and daily account summaries via email too!\n",
        "tags": []
    },
    {
        "uri": "/content/docs/user-guide/monitoring",
        "content": "---\ndate: 2017-06-05\ntitle: Monitor Lambda Functions with Dashbird\nlinktitle: Monitoring\ndescription: Monitoring\nkbSeries: [\"CUser Guide\"]\nkbSeries_weight: 100\n---\n\nDashbird currently offers account, microservice and function level monitoring. Below we will go through each one of them in detail, discuss how to use them and how to get the most out of them.\n\nAccount Level\nThe a href='https://app.dashbird.io' target='_blank'main dashboard/a provides account level insights into your Serverless architecture. It's designed to give you a quick overview of everything going on in your account including invocation volumes, failures, latency and overall health. You can control the observable time period on the top right corner of the graph area. \na href='/images/docs/overview.png' target=\"_blank\"img alt='Main dashboard' src='/images/docs/overview.png'/a\n\nWe reccommend enabling the live reload mode and putting that screen on a TV to keep an eye on things.\n\n Microservice level\n\na href='/docs/user-guide/projects/' target='_blank'Projects views/a lets you group relevant functions together to observe detailed metrics about them in one dashboard. You can decide yourseflt which functions to group together and build your own system.\n\nDashbird allows you to group Lambda Functions any way you like. This allows you to construct a dashboard for a service or set of functions. It will outline the load, any problems you might face, the cost and other important metrics.\n\nRead more about projects view a href='/docs/user-guide/projects'here/a.\n\na href='/images/docs/serviceview.png' target=\"_blank\"img alt='Project dashboard' src='/images/docs/project-view.png'/a\n\nSingle function level\nThis dashboard shows health, cost and other meaningful statistics of a single Lambda Function. You can also see the invocation history to pinpoint failed executions. You can also use this view to live tail a Lambda function.\n\na href='/images/docs/functionview.png' target=\"_blank\"img alt='Function dashboard' src='/images/docs/functionview.png'/a\n",
        "tags": []
    },
    {
        "uri": "/content/docs/user-guide/organizations",
        "content": "---\ndate: 2017-06-05\ntitle: Using Multiple Organizations & Setting Up New Ones\nlinktitle: Organizations\ndescription: One user account can be part of multiple organizations (company accounts) in Dashbird and easily access them without logging out.\nkbSeries: [\"CUser Guide\"]\nkbSeries_weight: 600\naliases:\n /help/basic/adding-aws-account/\n /docs/user-guide/adding-aws-account/\n---\nYou can have different AWS accounts connected to Dashbird and access them through the same interface with your personal user account. We call these different accounts Organizations and you can toggle between them by opening up the upper right menu.\n\nEach organization\n\n  is connected to separate AWS account and only shows data for that account\n  is billed separately according to the chosen plan and subscription type\n  has different user accounts connected to it\n  has different importing and alerting configurations\n\nSetting Up New Organization \nYou can set up new organization from the upper right menu. You have to name the new organization and the role ARN. Then proceed to creating the AWS delegation. You must follow these steps.\n\nCreate Policy \n\nOpen your AWS Console and go to IAM → Policies → Create Policy → JSON tab.\nCopy the policy JSON from the left and name it dashbird-policy\n\nCreate role \n\nNavigate to IAM → Roles → Create Role → Another AWS Account\nFill in the account ID and external ID.\n\nNB: DON'T require MFASelect the policy you created and name the role dashbird-delegation-role. Find the role from the list, and copy the ARN to 'Role ARN' field.\n\n---\nCheck out how you can set up alerting for each organization!\n",
        "tags": []
    },
    {
        "uri": "/content/docs/user-guide/projects",
        "content": "---\ndate: 2017-06-05\ntitle: Creating Projects for grouping Lambda Functions with Dashbird\nlinktitle: Projects\ndescription: Projects\nkbSeries: [\"CUser Guide\"]\nkbSeries_weight: 700\n---\n\nDashbird let's you create projects of hand-picked Lambdas to monitor. Want a dedicated dashboard only showing the functions you have in production? Easy, create a project.\n\nMonitor Limited Sets of Functions\nWe at Dashbird want to give you an experience you are already used to. Having multiple environments for development, staging and production is a requirement for any real-life system. Projects can make this a reality. \n\nYou choose which functions to add to a project. This project will then get it's own dedicated dashboards where you can monitor, analyze, and debug your functions.\n\nBy pressing the Project Views button on the left navigation panel you'll reach the Project Page where you can see a list of your projects.\n\nbr\n\n Create a new Project\ndiv class=\"row\"\n    div class=\"col-md-6 col-sm-12 col-xs-12 text-md-left pt-3\"\n        p class=\"lato\"By pressing the big green button at the top right part of the bProject Page/b you'll open up a popup for creating a new Project./p\n        p class=\"lato\"The way to add Functions is through a filtering process. By using a href=\"https://en.wikipedia.org/wiki/Glob_(programming)\"glob patterns/a you choose which Functions to add./p\n        pUse codesome-service-/code to binclude/b and code!some-service-prod-/code to bexclude/b Lambda Functions./p\n    /div\n    div class=\"col-md-6 col-sm-12 col-xs-12 imgs-fluid\"\n        img src='/images/docs/create-project.png'\n    /div\n/div\n\nProject Dashboard\nHaving dedicated dashboards for different environments can improve your team's separation of concerns. You can monitor and debug different environments and divide your system into multiple logical units.\n\nbr\n\n---\n\nGet started with Projects by adding them to your account!",
        "tags": []
    },
    {
        "uri": "/content/docs/user-guide/tracing",
        "content": "---\ndate: 2017-06-05\ntitle: Tracing Lambda Functions with Dashbird\nlinktitle: Tracing\ndescription: Tracing\nkbSeries: [\"CUser Guide\"]\nkbSeries_weight: 300\n---\n\nDashbird provides tracing possibilities through Aws X-Ray.\n\nh2\n  span class=\"h2 underlined bold\"How it works/span\n/h2\n\nDashbird automatically can detect if a function has X-ray enabled or not. \nWhen opening an invocation belonging to a lambda that has X-ray monitoring enabled it will fetch X-ray data on-demand and show the results in a orderly fashion.\n\nh2\n  span class=\"h2 underlined bold\"Why to use?/span\n/h2\n\nX-Ray is a powerful tool that provides tracing data throughout the life of AWS invocation. With the help of X-ray its possible to track the full extent of invocation flow. \n\nIt also can show you the duration metrics to different services, for example X-ray can show you exactly how long it took to read and write data to DynamoDB, or any other AWS service.\n\nX-ray also supports custom traces, meaning data you want to manually track. Dashbird shows all this and gives you a really easy way to understand where time is lost and what actually failed.\n",
        "tags": []
    }
]
